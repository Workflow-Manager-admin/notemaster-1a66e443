{"is_source_file": true, "format": "Python", "description": "This file sets up database connection handling for the notes_backend project, including environment variable loading, engine creation, and a dependency generator for database sessions.", "external_files": ["dotenv", "sqlalchemy", "os"], "external_methods": ["load_dotenv", "create_engine", "sessionmaker"], "published": ["get_db"], "classes": [], "methods": [{"name": "get_db()", "description": "Provides a database session for dependency injection, managing session lifecycle.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv", "os.getenv", "create_engine", "sessionmaker", "SessionLocal"], "search-terms": ["database configuration", "SQLAlchemy session", "get_db", "engine creation", "sessionmaker", "DATABASE_URL"], "state": 2, "file_id": 6, "knowledge_revision": 13, "git_revision": "", "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/database.py", "pattern": "/^DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/test.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connect_args", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/database.py", "pattern": "/^connect_args = {\"check_same_thread\": False} if DATABASE_URL.startswith(\"sqlite\") else {}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/database.py", "pattern": "/^engine = create_engine(DATABASE_URL, connect_args=connect_args, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/database.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "37527b3ef6d5f0ff32094ac87b1e4944", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/database.py", "fields": [{"name": "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/test.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "connect_args = {\"check_same_thread\": False} if DATABASE_URL.startswith(\"sqlite\") else {}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, connect_args=connect_args, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13": ""}]}