{"is_source_file": true, "format": "Python", "description": "This is a FastAPI application defining backend API endpoints for a notes application named NoteMaster. It manages user registration, authentication, and CRUD operations on notes, including search, filtering, and sorting.", "external_files": ["./models", "./database", "./schemas", "./auth"], "external_methods": ["get_password_hash", "authenticate_user", "create_access_token", "get_current_active_user", "get_db"], "published": ["app"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint returning a simple status message.", "scope": "", "scopeKind": ""}, {"name": "register(user_in: UserCreate, db: Session = Depends(get_db))", "description": "Registers a new user, checking for existing username or email.", "scope": "", "scopeKind": ""}, {"name": "login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates user credentials and returns a JWT token.", "scope": "", "scopeKind": ""}, {"name": "read_users_me( current_user: User = Depends(get_current_active_user) )", "description": "Returns the profile information of the currently authenticated user.", "scope": "", "scopeKind": ""}, {"name": "create_note( note_in: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user) )", "description": "Creates a new note associated with the current user.", "scope": "", "scopeKind": ""}, {"name": "list_notes( db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), q: Optional[str] = Query(None, description=\"Search query for titles\"), sort: Optional[str] = Query(\"created\", description=\"Sort by (created/title, prefix with '-' for descending)\"), limit: int = Query(20, gt=0, le=100) )", "description": "Returns filtered, sorted list of notes for the current user.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: int = Path(..., title=\"The ID of the note\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), )", "description": "Retrieves a specific note owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: int, note_in: NoteUpdate = Body(...), db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), )", "description": "Updates fields of a note owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), )", "description": "Deletes a note owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "on_startup()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["Base.metadata.create_all", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "authenticate_user", "get_password_hash", "create_access_token", "get_current_active_user"], "search-terms": ["FastAPI", "notes API", "user registration", "JWT authentication", "notes CRUD", "search notes", "filter notes", "sort notes", "/auth/token", "/notes/"], "state": 2, "file_id": 1, "knowledge_revision": 26, "git_revision": "ebe1551774d2ac4c6618d0b6a4aa7eb1b064292c", "revision_history": [{"8": "bf6b26c630f7c1946f208d92c6a7426e4cc053a2"}, {"20": "b5eeecec60f74316505ab27c93422d12efebb54b"}, {"25": "b5eeecec60f74316505ab27c93422d12efebb54b"}, {"26": "ebe1551774d2ac4c6618d0b6a4aa7eb1b064292c"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( note_in: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user) )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., title=\"The ID of the note\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), )"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), q: Optional[str] = Query(None, description=\"Search query for titles\"), sort: Optional[str] = Query(\"created\", description=\"Sort by (created/title, prefix with '-' for descending)\"), limit: int = Query(20, gt=0, le=100) )"}, {"_type": "tag", "name": "login_for_access_token", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depen/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "on_startup", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def on_startup():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "read_users_me", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def read_users_me($/", "language": "Python", "kind": "function", "signature": "( current_user: User = Depends(get_current_active_user) )"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def register(user_in: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_in: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/notemaster-1a66e443/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, note_in: NoteUpdate = Body(...), db: Session = Depends(get_db), current_user: User = Depends(get_current_active_user), )"}], "hash": "63017e1aa1fa89590c34fda6bf0d71da", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}]}